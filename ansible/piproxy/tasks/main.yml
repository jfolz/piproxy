---

- name: Download binary
  ansible.builtin.unarchive:
    src: https://github.com/jfolz/piproxy/releases/download/{{ version }}/piproxy-linux-x86_64-v{{ version }}.tar.xz
    dest: /usr/local/bin
    remote_src: yes

- name: Create user 
  ansible.builtin.user:
    name: {{ user }}
    group: {{ group }}
    system: true
    shell: /sbin/nologin
    create_home: no
    comment: "{{ service }} service user"
  become: true
  when: user != "root"

- name: Create config directory
  ansible.builtin.file:
    path: {{ config | dirname }}
    state: directory

- name: Install config file
  ansible.builtin.template:
    src: templates/config.yml
    dest: {{ config }}
    owner: {{ user }}
    group: {{ group }}
    mode: 0400

- name: Add tmpfiles.d config for pidfile directory
  ansible.builtin.template:
    src: templates/piproxy-pidfile.conf
    dest: /etc/tmpfiles.d/{{ service }}-pidfile.conf

- name: Install service file
  ansible.builtin.template:
    src: templates/piproxy.service
    dest: /etc/systemd/system/{{ service }}.service

- name: Check service status
  command: systemctl is-active {{ service }}
  register: service_status
  ignore_errors: true

- name: Start service if it is not running
  ansible.builtin.systemd:
    name: {{ service }}
    daemon_reload: true
    state: started
    enabled: true
  when: service_status.rc != 0

- name: Reload service if it is running
  ansible.builtin.systemd:
    name: {{ service }}
    daemon_reload: true
    state: reloaded
    enabled: true
  when: service_status.rc == 0
